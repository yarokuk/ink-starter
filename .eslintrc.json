{
  "env": {
    "browser": false,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "react", "react-hooks", "jest"],
  "extends": [
    "airbnb-base",
    "eslint:recommended",
    "plugin:node/recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": 2020,
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "rules": {
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "property",
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allowDouble"
      }
    ],
    "@typescript-eslint/no-confusing-void-expression": "error",
    "import/extensions": "off",
    "import/no-extraneous-dependencies": [
      "error",
      { "devDependencies": ["*.js", "*.ts", "src/**/__tests__/**/*"] }
    ],
    "import/no-unresolved": "off",
    "import/prefer-default-export": "off",
    "no-console": "off",
    "no-empty": ["error", { "allowEmptyCatch": true }],
    "no-plusplus": "off",
    "no-process-exit": "off",
    "no-ternary": "off",
    "no-underscore-dangle": "error",
    "no-void": "off",
    "node/no-missing-import": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "node/shebang": [
      "error",
      {
        "convertPath": {
          "src/index.tsx": ["^src/index.tsx$", "dist/index.js"]
        }
      }
    ],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "if" },
      { "blankLine": "always", "prev": "if", "next": "*" },
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": "*", "next": "multiline-const" },
      { "blankLine": "always", "prev": "*", "next": "multiline-expression" },
      { "blankLine": "always", "prev": "*", "next": "multiline-let" },
      { "blankLine": "always", "prev": "multiline-const", "next": "*" },
      { "blankLine": "always", "prev": "multiline-expression", "next": "*" },
      { "blankLine": "always", "prev": "multiline-let", "next": "*" },
      { "blankLine": "always", "prev": "const", "next": "expression" },
      { "blankLine": "always", "prev": "let", "next": "expression" }
    ],
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/hook-use-state": "error",
    "react/jsx-curly-brace-presence": "error",
    "react/jsx-boolean-value": "error",
    "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
    "react/jsx-uses-react": "off",
    "react/no-unused-prop-types": "error",
    "react/self-closing-comp": "error",
    "react/react-in-jsx-scope": "off"
  },
  "overrides": [
    {
      "files": ["**/*.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": ["**/__tests__/**/*.[jt]s?(x)", "**/?(*.)+(spec|test).[jt]s?(x)"],
      "extends": ["plugin:jest/recommended"],
      "rules": {
        "jest/prefer-lowercase-title": [
          "error",
          {
            "ignore": ["describe"]
          }
        ]
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "ignorePatterns": ["/coverage", "/dist", "/node_modules"]
}
